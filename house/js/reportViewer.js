(function ($) {

    $.fn.reportViewer = function (options) {

        var defaults = {
            reportTitle: "",
            inputSetReportName: "",
            defaultFields: [],
            dtCols: [],
            dateFormat: 'MMM D, YYYY h:mm a',
            dtDateFormat: 'MMM D, YYYY',
            username: "",
            startYear: '-2'
        };

        var settings = $.extend(true, {}, defaults, options);

        var $wrapper = $(this);

		reinitialize($wrapper, settings);
        createViewer($wrapper, settings);

        return this;
    };

    function createViewer($wrapper, settings) {
        
        //column filters
        $wrapper.find('.includeFields').fieldSets({
            "reportName": settings.inputSetReportName,
            "defaultFields": settings.defaultFields
        });

        //time periods
        $wrapper.find('.selCalendar').change(function () {
            $wrapper.find('.selIntYear').show();
            if ($(this).val() && $(this).val() != '19') {
                $wrapper.find('.selIntMonth').hide();
            } else {
                $wrapper.find('#selIntMonth').show();
            }
            if ($(this).val() && $(this).val() != '18') {
                $wrapper.find('.dates').hide();
            } else {
                $wrapper.find('.dates').show();
                $wrapper.find('#selIntYear').hide();
            }
        });
        $wrapper.find('#selCalendar').change();

        $wrapper.find('.ckdate').datepicker({
            yearRange: settings.startYear + ':+02',
            changeMonth: true,
            changeYear: true,
            autoSize: true,
            numberOfMonths: 1,
            dateFormat: 'M d, yy'
            });

        //dataTable
        var dtOptions = {
            "columnDefs": [
            {"targets": settings.dtCols,
            "type": "date",
            "render": function ( data, type, row ) {return dateRender(data, type, settings.dtDateFormat);}
            }
            ],
            "displayLength": 50,
            "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]],
            "dom": "<\"top ui-toolbar ui-helper-clearfix\"Bif><\"hhk-overflow-x\"rt><\"bottom ui-toolbar ui-helper-clearfix\"lp>",
            "buttons": [
            {
                extend: "print",
                className: "ui-corner-all",
                autoPrint: true,
                paperSize: "letter",
                title: function(){
                    return settings.reportTitle;
                },
                messageTop: function(){
                    return $wrapper.find(".repSummary")[0].outerHTML;
                },
                messageBottom: function(){
                    var now = moment().format(settings.dateFormat);

                    return "<div style=\"padding-top: 10px; position: fixed; bottom: 0; right: 0\">Generated by <strong>" + settings.username + "</strong> on " + now + "</div>";
                },
                customize: function (win) {
                    $(win.document.body)
                        .css("font-size", "0.9em");

                    $(win.document.body).find("table")
                        //.addClass("compact")
                        .css("font-size", "inherit");
                }
            },
            {
                text: "Email",
                className: "ui-corner-all",
                action: function (e) {
                    settings.emDialog.dialog("open");
                }
            },
            ],
        }

        if(typeof settings.drawCallback === "function"){
            dtOptions["drawCallback"] = settings.drawCallback;
        }

        $wrapper.find(".tblrpt").dataTable(dtOptions);

        settings.emDialog = $wrapper.find(".emRptDialog").dialog({
            autoOpen:false,
            modal:true,
            title: "Email " + settings.reportTitle,
            width: "auto",
            buttons: {
                "Send":function(){
                    var data = $wrapper.find("#" + settings.inputSetReportName + "RptFilterForm").serializeArray();
                        data.push({"name":"btn" + settings.inputSetReportName + "Email", "value":"true"});
                        data.push({"name":"txtSubject", "value":$(this).find("#txtSubject").val()});
                        data.push({"name":"txtEmail", "value":$(this).find("#txtEmail").val()});
                    $.ajax({
                        type:"post",
                        data:data,
                        dataType: "json",
                        success: function(data){
                            if(data.success){
                                flagAlertMessage(data.success,false);
                                settings.emDialog.dialog("close");
                            }else if(data.error){
                                flagAlertMessage(data.error, true);
                            }else{
                                flagAlertMessage("An unknown error occurred", true);
                            }
                        }
                    });
                }
            }
        });
    }
    
    function reinitialize($wrapper, settings){
		$wrapper.off('click', '*');
	}

}(jQuery));